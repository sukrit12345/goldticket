const BASE_URL = process.env.NODE_ENV === 'production' 
    ? 'goldticketbackend.up.railway.app'  // URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Production (‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏à‡∏£‡∏¥‡∏á)
    : 'http://localhost:3001';     // URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Development (localhost)


// ======================
// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏•‡∏Å (Global Variables)
// ======================
let map; // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà Leaflet
let treasureMarkers = []; // ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡πÄ‡∏Å‡πá‡∏ö Marker ‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
let currentRole = 'placer'; // ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ('placer' ‡∏´‡∏£‡∏∑‡∏≠ 'hunter')
let selectedPosition = null; // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î placer)
let selectedMarker = null; // Marker ‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î hunter)
let selectedTreasure = null; // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
let treasures = []; // ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
let userLocation = null; // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

// ======================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà (Main Map Initialization)
// ======================
function initMap() {
    initializeMap(); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    loadTreasuresFromStorage(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å localStorage
    setupGeolocation(); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    setupMapClickHandler(); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
}

// ======================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ (Helper Functions)
// ======================

/**
 * 1. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà Leaflet ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
 */
function initializeMap() {
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà (‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢)
    const defaultCenter = [15.8700, 100.9925];
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    map = L.map('map').setView(defaultCenter, 6);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ú‡πà‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);
}

/**
 * 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage
 * ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
 */
function loadTreasuresFromStorage() {
    try {
        const storedTreasures = localStorage.getItem('treasures');
        if (storedTreasures) {
            treasures = JSON.parse(storedTreasures);
            
            // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ñ‡∏•‡∏°‡πÅ‡∏•‡πâ‡∏ß
            treasures = treasures.filter(t => 
                t && 
                typeof t.lat === 'number' && 
                typeof t.lng === 'number' &&
                !isNaN(t.lat) && 
                !isNaN(t.lng) &&
                (t.claimed === undefined || t.claimed === false)
            );
        }
    } catch (e) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥:", e);
        treasures = [];
    }
}

/**
 * 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
 * ‡πÉ‡∏ä‡πâ Geolocation API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 */
function setupGeolocation() {
    if (!navigator.geolocation) {
        alert("‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô");
        document.getElementById('loading-message').style.display = 'none';
        loadTreasures();
        return;
    }

    // ‡∏Ç‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏™‡∏π‡∏á, timeout 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    navigator.geolocation.getCurrentPosition(
        handleGeolocationSuccess,
        handleGeolocationError,
        {
            enableHighAccuracy: true,
            timeout: 10000,
            maximumAge: 0
        }
    );
}

/**
 * 3.1 ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
 * @param {Position} position - ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å Geolocation API
 */
function handleGeolocationSuccess(position) {
    userLocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
    };
    
    updateUserLocationOnMap(userLocation);
    hideLoadingMessage();
    loadTreasures();
}

/**
 * 3.2 ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
 * @param {GeolocationPositionError} error - ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
 */
function handleGeolocationError(error) {
    console.warn("‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:", error);
    alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô");
    hideLoadingMessage();
    loadTreasures();
}

/**
 * 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
 * @param {Object} location - ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô {lat, lng}
 */
function updateUserLocationOnMap(location) {
    // ‡∏•‡∏ö Marker ‡πÄ‡∏Å‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (window.userMarker) {
        map.removeLayer(window.userMarker);
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Marker ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    window.userMarker = L.marker([location.lat, location.lng], {
        icon: L.divIcon({
            className: 'current-location-icon',
            html: 'üìç', // ‡πÉ‡∏ä‡πâ‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
            iconSize: [50, 50]
        })
    }).addTo(map)
    .bindPopup("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
    .openPopup();
    
    // ‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏ã‡∏π‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö 20)
    map.setView([location.lat, location.lng], 20);
}

/**
 * 5. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
 * ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
 */
function setupMapClickHandler() {
    map.on('click', (event) => {
        if (currentRole === 'placer') {
            handleMapClickForPlacer(event);
        }
    });
}

/**
 * 5.1 ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ß‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
 * @param {LeafletEvent} event - ‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
 */
function handleMapClickForPlacer(event) {
    selectedPosition = event.latlng; // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    setCurrentDate(); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
    showPlaceTreasureModal(); // ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏°‡∏î‡∏≠‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
}

/**
 * 6. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
 */
async function loadTreasures() {
    try {
        clearTreasureMarkers(); // ‡∏•‡∏ö Marker ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å API
        const response = await fetch(`http://${BASE_URL}/api/treasures`);
        treasures = await response.json();
        
        // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
        const locationGroups = groupTreasuresByLocation(treasures);
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á Marker ‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
        createTreasureMarkers(locationGroups);
    } catch (error) {
        console.error("Error loading treasures:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥");
    }
}

/**
 * 6.1 ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏Å‡πà‡∏≤
 * ‡∏•‡∏ö Marker ‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
 */
function clearTreasureMarkers() {
    treasureMarkers.forEach(marker => map.removeLayer(marker));
    treasureMarkers = [];
}

/**
 * 6.2 ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
 * @param {Array} treasures - ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 * @returns {Object} ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
 */
function groupTreasuresByLocation(treasures) {
    const locationGroups = {};
    
    treasures.forEach(treasure => {
        const locationKey = `${treasure.lat},${treasure.lng}`;
        if (!locationGroups[locationKey]) {
            locationGroups[locationKey] = [];
        }
        locationGroups[locationKey].push(treasure);
    });
    
    return locationGroups;
}

/**
 * 6.3 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
 * @param {Object} locationGroups - ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
 */
function createTreasureMarkers(locationGroups) {
    Object.values(locationGroups).forEach(treasureGroup => {
        if (treasureGroup.length === 0) return;
        
        const position = treasureGroup[0];
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á Marker ‡∏î‡πâ‡∏ß‡∏¢‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö stacked
        const marker = L.marker([position.lat, position.lng], {
            icon: createStackedIcon(treasureGroup.length)
        }).addTo(map);
        
        // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏µ‡πâ
        marker.treasuresAtLocation = treasureGroup;
        
        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà Marker (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î hunter)
        marker.on('click', () => {
            if (currentRole === 'hunter') {
                handleTreasureMarkerClick(marker, treasureGroup);
            }
        });
        
        treasureMarkers.push(marker);
    });
}

/**
 * 6.4 ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
 * @param {LeafletMarker} marker - Marker ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å
 * @param {Array} treasureGroup - ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏µ‡πâ
 */
function handleTreasureMarkerClick(marker, treasureGroup) {
    selectedMarker = marker;
    
    // ‡∏´‡∏≤‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ñ‡∏•‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    selectedTreasure = treasureGroup.find(t => !t.claimed) || treasureGroup[0];
    
    displayTreasureInfo(selectedTreasure);
    document.getElementById('view-treasure-modal').style.display = 'flex';
}

/**
 * 7. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
 * @param {Object} treasure - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
 */
function displayTreasureInfo(treasure) {
    if (!treasure) return;
    
    let infoHTML = `
        <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏á:</strong> ${treasure.placementDate || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô:</strong> ${treasure.name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
    `;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (treasure.ig) infoHTML += `<p><strong>‡πÑ‡∏≠‡∏à‡∏µ‡∏£‡πâ‡∏≤‡∏ô:</strong> ${treasure.ig}</p>`;
    if (treasure.face) infoHTML += `<p><strong>‡πÄ‡∏ü‡∏™‡∏£‡πâ‡∏≤‡∏ô:</strong> ${treasure.face}</p>`;
    
    infoHTML += `
        <p><strong>‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à:</strong> ${treasure.mission || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î:</strong> ${treasure.discount || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}%</p>
    `;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1
    if (selectedMarker?.treasuresAtLocation) {
        const boxesAtLocation = selectedMarker.treasuresAtLocation.filter(t => !t.claimed).length;
        if (boxesAtLocation > 1) {
            infoHTML += `<p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏¢‡∏π‡πà:</strong> ${boxesAtLocation}</p>`;
        }
    }
    
    document.getElementById('treasure-info').innerHTML = infoHTML;
}

/**
 * 8. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
 * @param {Number} count - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏µ‡πâ
 * @returns {L.DivIcon} ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Marker
 */
function createStackedIcon(count) {
    return L.divIcon({
        className: 'treasure-icon',
        html: `üí∞`, // ‡πÉ‡∏ä‡πâ‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
        iconSize: [20, 20]
    });
}

/**
 * 10. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
 */
function hideLoadingMessage() {
    document.getElementById('loading-message').style.display = 'none';
}

function setCurrentDate() {
    document.getElementById('placement-date').valueAsDate = new Date();
}

function showPlaceTreasureModal() {
    document.getElementById('place-treasure-modal').style.display = 'flex';
}

// ======================
// ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à (DOM Content Loaded)
// ======================
document.addEventListener('DOMContentLoaded', function() {
    initMap(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
    setupEventListeners(); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå
});

/**
 * ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ
 */
function setupEventListeners() {
    // ‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö DOM
    const placerBtn = document.getElementById('placer-btn');
    const hunterBtn = document.getElementById('hunter-btn');
    const placerInstructions = document.getElementById('placer-instructions');
    const hunterInstructions = document.getElementById('hunter-instructions');
    
    // ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
    placerBtn.addEventListener('click', () => switchRole('placer'));
    hunterBtn.addEventListener('click', () => switchRole('hunter'));
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏°‡∏î‡∏≠‡∏•‡∏ï‡πà‡∏≤‡∏á‡πÜ
    setupModalEventListeners();
    setupFormEventListeners();
}

/**
 * ‡∏™‡∏•‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏ß‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡∏ï‡∏≤‡∏°‡∏´‡∏≤‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
 * @param {String} role - ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏´‡∏°‡πà ('placer' ‡∏´‡∏£‡∏∑‡∏≠ 'hunter')
 */
function switchRole(role) {
    currentRole = role;
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏ï‡∏≤‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
    document.getElementById('placer-btn').classList.toggle('active', role === 'placer');
    document.getElementById('hunter-btn').classList.toggle('active', role === 'hunter');
    document.getElementById('placer-instructions').style.display = role === 'placer' ? 'block' : 'none';
    document.getElementById('hunter-instructions').style.display = role === 'hunter' ? 'block' : 'none';
}

/**
 * ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏°‡∏î‡∏≠‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
function setupModalEventListeners() {
    // ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î‡πÇ‡∏°‡∏î‡∏≠‡∏•
    document.getElementById('close-place-modal').addEventListener('click', () => hideModal('place-treasure-modal'));
    document.getElementById('close-view-modal').addEventListener('click', () => hideModal('view-treasure-modal'));
    document.getElementById('close-proof-modal').addEventListener('click', () => hideModal('submit-proof-modal'));
    document.getElementById('close-code-modal').addEventListener('click', () => hideModal('discount-code-modal'));
    
    // ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
    document.getElementById('cancel-place').addEventListener('click', () => hideModal('place-treasure-modal'));
    document.getElementById('cancel-view').addEventListener('click', () => hideModal('view-treasure-modal'));
    document.getElementById('cancel-proof').addEventListener('click', () => {
        hideModal('submit-proof-modal');
        showModal('view-treasure-modal');
    });
    document.getElementById('close-code').addEventListener('click', () => hideModal('discount-code-modal'));
    
    // ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
    document.getElementById('save-treasure').addEventListener('click', saveTreasure);
    document.getElementById('next-step').addEventListener('click', () => {
        hideModal('view-treasure-modal');
        showModal('submit-proof-modal');
    });
    document.getElementById('submit-proof').addEventListener('click', submitProof);
}

/**
 * ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
 */
function setupFormEventListeners() {
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
    document.getElementById('proof-image').addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(event) {
                document.getElementById('proof-preview').src = event.target.result;
                document.getElementById('proof-preview').style.display = 'block';
            };
            reader.readAsDataURL(file);
        }
    });
}

/**
 * ‡∏ã‡πà‡∏≠‡∏ô‡πÇ‡∏°‡∏î‡∏≠‡∏•
 * @param {String} modalId - ID ‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡∏î‡∏≠‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ã‡πà‡∏≠‡∏ô
 */
function hideModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏°‡∏î‡∏≠‡∏•
 * @param {String} modalId - ID ‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡∏î‡∏≠‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
 */
function showModal(modalId) {
    document.getElementById(modalId).style.display = 'flex';
}

/**
 * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÉ‡∏´‡∏°‡πà
 */
async function saveTreasure() {
    if (!selectedPosition) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô');
        return;
    }
    
    const formData = getTreasureFormData();
    
    if (!validateTreasureForm(formData)) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
        return;
    }
    
    try {
        await saveTreasuresToServer(formData);
        await loadTreasures();
        resetTreasureForm();
        hideModal('place-treasure-modal');
    } catch (error) {
        console.error("Error saving treasure:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
    }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ß‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
 * @returns {Object} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
 */
function getTreasureFormData() {
    return {
        lat: selectedPosition.lat,
        lng: selectedPosition.lng,
        boxCount: parseInt(document.getElementById('total-boxes').value) || 1,
        name: document.getElementById('name').value.trim(),
        ig: document.getElementById('ig').value.trim(),
        face: document.getElementById('face').value.trim(),
        mission: document.getElementById('mission').value.trim(),
        discount: document.getElementById('discount').value.trim(),
        placementDate: document.getElementById('placement-date').value
    };
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
 * @param {Object} formData - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
 * @returns {Boolean} ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
 */
function validateTreasureForm(formData) {
    return formData.name && formData.mission && formData.discount && formData.placementDate;
}

/**
 * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏•‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
 * @param {Object} formData - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
 */
async function saveTreasuresToServer(formData) {
    for (let i = 0; i < formData.boxCount; i++) {
        const response = await fetch(`http://${BASE_URL}/api/treasures`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                lat: formData.lat,
                lng: formData.lng,
                placementDate: formData.placementDate,
                name: formData.name,
                ig: formData.ig,
                face: formData.face,
                mission: formData.mission,
                discount: formData.discount,
                claimed: false
            })
        });
        
        if (!response.ok) throw new Error('Failed to save treasure');
    }
}

/**
 * ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ß‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
 */
function resetTreasureForm() {
    document.getElementById('name').value = '';
    document.getElementById('ig').value = '';
    document.getElementById('face').value = '';
    document.getElementById('mission').value = '';
    document.getElementById('discount').value = '';
    document.getElementById('total-boxes').value = '1';
}

/**
 * ‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏ö‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥
 */
async function submitProof() {
    if (!selectedTreasure) {
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
        return;
    }
    
    if (!document.getElementById('proof-image').files?.[0]) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô');
        return;
    }
    
    try {
        await updateTreasureStatus();
        await loadTreasures();
        displayDiscountCode();
        resetProofForm();
    } catch (error) {
        console.error("Error submitting proof:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô");
    }
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ñ‡∏•‡∏°‡πÅ‡∏•‡πâ‡∏ß
 */
async function updateTreasureStatus() {
    const response = await fetch(`http://${BASE_URL}/api/treasures/${selectedTreasure._id}`, {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ claimed: true })
    });
    
    if (!response.ok) throw new Error('Failed to update treasure status');
}

/**
 * 9. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
 * @returns {String} ‡∏£‡∏´‡∏±‡∏™‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
 */
function generateDiscountCode() {
    const chars = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789'; // ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
    let code = '';
    for (let i = 0; i < 8; i++) {
        code += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    return code;
}

/**
 * ‡πÄ‡πÄ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡πÄ‡∏Ñ‡∏õ‡πÄ‡πÄ‡∏ä‡∏ó‡πÉ‡∏´‡πâ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô
 */
function displayDiscountCode() {
    const discountCode = generateDiscountCode(); // üîê ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏™‡∏∏‡πà‡∏°

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô
    document.getElementById('shop-name-display').textContent = selectedTreasure.name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    document.getElementById('mission-display').textContent = selectedTreasure.mission || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    document.getElementById('discount-display').textContent = (selectedTreasure.discount || '0') + '%';

    // üÜï ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
    const discountCodeElement = document.getElementById('discount-code-display');
    if (discountCodeElement) {
        discountCodeElement.textContent = discountCode;
    } else {
        console.warn('‡πÑ‡∏°‡πà‡∏û‡∏ö element ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î');
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô
    const file = document.getElementById('proof-image').files[0];
    const reader = new FileReader();
    reader.onload = function(event) {
        document.getElementById('proof-image-display').src = event.target.result;
        document.getElementById('proof-image-display').style.display = 'block';
    };
    reader.readAsDataURL(file);

    hideModal('submit-proof-modal');
    showModal('discount-code-modal');

    // ‚è¨ ‡∏£‡∏≠‡πÉ‡∏´‡πâ modal ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢ capture
    setTimeout(() => {
        const targetElement = document.getElementById('discount-code-modal'); // ‡∏´‡∏£‡∏∑‡∏≠ container ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Ñ‡∏õ

        html2canvas(targetElement).then(canvas => {
            // ‡πÅ‡∏õ‡∏•‡∏á canvas ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ
            const image = canvas.toDataURL("image/png");

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
            const downloadLink = document.createElement('a');
            downloadLink.href = image;
            downloadLink.download = '‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á.png';
            downloadLink.click();
        }).catch(err => {
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Ñ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠:", err);
        });
    }, 1000); // ‡∏£‡∏≠ modal ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• 1 ‡∏ß‡∏¥ ‡∏Å‡πà‡∏≠‡∏ô capture
    
}

/**
 * ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô
 */
function resetProofForm() {
    document.getElementById('proof-image').value = '';
    document.getElementById('proof-preview').style.display = 'none';
    document.getElementById('proof-preview').src = '';
}
